/*
author:		Daniel B. Kazmer (webshifted.com)
version:	3.0.0
*/
function nodeListener(a,b){var c=[],d=[],e=Math.round(new Date().getTime()/1e3),f='nodeListenerEvent.'+a+e;const g=o=>{o.forEach(p=>{if(1===p.nodeType)if(p.matches(a))c.push(p);else if(0<p.querySelectorAll(a).length){let q=p.querySelectorAll(a);q.forEach(r=>c.push(r))}})},h=o=>{1===o.nodeType&&o.matches(a)&&d.push(o)},i=()=>{(0<c.length||0<d.length)&&(document.dispatchEvent(k),0<c.length&&document.dispatchEvent(l),0<d.length&&document.dispatchEvent(m))};var j=new MutationObserver(o=>{o.forEach(p=>{0<p.addedNodes.length&&g(p.addedNodes),0<p.removedNodes.length&&h(p.removedNodes[0])}),i(),setTimeout(()=>{c=[],d=[]},0)});const k=new Event(f),l=new Event(f+'.add'),m=new Event(f+'.remove');{MutationObserver.prototype.then=q=>{q instanceof Function?document.addEventListener(f,()=>q.call(j,c,d)):console.warn('nodeListener: \'then\' method only accepts a function')},MutationObserver.prototype.on=(q,r)=>{const s=(u,v)=>document.addEventListener(u,v);'add'===q?s(f+'.add',()=>r.call(j,c)):'remove'===q?s(f+'.remove',()=>r.call(j,d)):(console.warn('nodeListener: unaccepted or no event specified for \'on\' method'),j.disconnect())}}return j.observe(b||document.body,{attributes:!0,childList:!0,characterData:!0,subtree:!0}),j}